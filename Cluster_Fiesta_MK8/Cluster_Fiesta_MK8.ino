
#include <mcp_can.h>
MCP_CAN CAN(9);

    #define OK_BTN_PIN 3
    #define UP_BTN_PIN 4
    #define DOWN_BTN_PIN 5
    #define BACK_BTN_PIN 6
    #define MENU_BTN_PIN 7
  

void setup() {
  Serial.begin(115200);
  if (CAN.begin(MCP_ANY, CAN_500KBPS, MCP_16MHZ) == CAN_OK)
    Serial.println("Connection OK");
  else
    Serial.println("Connection failed");
  CAN.setMode(MCP_ANY);

}
void opSend(short addr, byte a, byte b, byte c, byte d, byte e, byte f, byte g, byte h) {
  unsigned char data[8] = { a, b, c, d, e, f, g, h };
  CAN.sendMsgBuf(addr, 0, 8, data);
}

void loop() {
  
    pinMode(OK_BTN_PIN, INPUT_PULLUP);
    pinMode(UP_BTN_PIN, INPUT_PULLUP);
    pinMode(DOWN_BTN_PIN, INPUT_PULLUP);
    pinMode(BACK_BTN_PIN, INPUT_PULLUP);
    pinMode(MENU_BTN_PIN, INPUT_PULLUP);
  
  if (digitalRead(OK_BTN_PIN) == LOW ) {
    
  opSend(0x082, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
  
    }else if (digitalRead(UP_BTN_PIN) == LOW ) {
      
  opSend(0x082, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
  
    }else if (digitalRead(DOWN_BTN_PIN) == LOW ) {
      
  opSend(0x082, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
    
    }else if (digitalRead(BACK_BTN_PIN) == LOW ) {
    
  opSend(0x082, 0x00, 76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
  
    }else if (digitalRead(MENU_BTN_PIN) == LOW) {
  
  opSend(0x082, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00);
  
    }else {
      
opSend(0x082, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);

    }
    
        opSend(0x591, 0x91, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF); // Keep alive signal
        opSend(0x3B2, B01000000, 0x00, 0x00, 0x8E, B00000000, 0x00, B00000000, 0x00); //Ignition
        opSend(0x179, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00); //Odometer and Service
        opSend(0x156, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00); //Coolant
        opSend(0x04C, 0x00, 85, 85, 0x00, 0x00, 0x00, 0x00, 0x00); //Airbag
        opSend(0x213, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //Parking Brake (Fusion 2013)
        opSend(0x3C3, 0x00, B11111111, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);  //Vehicle Alarm + Parking Brake 
        opSend(0x416, 0x0E, 0x00, 0x00, 0x00, 0x00, B00000000, B00000000, 0x00); //absLight  
        opSend(0x3b4, 0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //TPMS
        opSend(0x421, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //ECU 
        opSend(0x42C, 0x00, 0x00, 0xA6, 0x00, 0x00, 0x00, 0x00, 0x00); //Charging System  
        opSend(0x877, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //Power Steering   
        opSend(0x191, 65, 17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //Language?   
        opSend(0x3B3, 0x00, 0x00, 0x00, 0x00, 100, 0x00, 0xFF, 0x00); //Outside Temp
        opSend(0x3D8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //Front Camera
        opSend(0x46A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00); //Tractioncontrol
        opSend(0x46B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, B00000000); //High Beam + Auto Hed

}
